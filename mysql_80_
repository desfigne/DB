/**
* MySQL 실습

===================================================================================================================================================
section 01. 개요
===================================================================================================================================================

MySQL :: 정형 데이터를 저장하는 데이터베이스

- SQL 문법을 사용하여 데이터를 CRUD 한다.
  C(Create: 생성, insert)
  R(Read  : 조회, select)
  U(Update: 수정, update)
  D(Delete: 삭제, delete)
  
- 개발자는 DML에 대한 CRUD 명령어를 잘 사용할 수 있어야 한다.
  자바 학습시 어레이리스트에 사용하던 CRUD를 DB로 대체해서 사용이 가능하다.
  
- SQL은 대소문자 구분하지 않음, 보통 소문자로 작성
  snake 방식의 네이밍 규칙을 가짐
  
- SQL은 크게 DDL, DML, DCL, DTL로 구분할 수 있다. (이 중에 특히 DML을 잘해야 한다.)
** 실무에서는 직접 작성하고 생성하기보단 권한을 받아 작업을 진행하는 경우가 많음

1. DDL (Data Definition Language) : 데이터 정의어
  : 데이터를 저장하기 위한 공간을 생성하고 논리적으로 정의하는 언어
  > create, alter, truncate, drop
  
2. DML (Data Manipuation Language) : 데이터 조작어
  : 데이터를 CRUD하는 명령어
  > insert, select, update, delete
  
3. DCL (Data Control Language) : 데이터 제어어
  : 데이터에 대한 권한과 보안을 정의하는 언어
  > grant, revoke
  
4. DTL(TCL이라고도 함) (Data Transaction Language, TCL) : 트랜잭션 제어어
  : 데이터베이스의 처리 작원 단위인 트랜잭션을 관리하는 언어
  > commit, save, rollback

-- "--"은 주석 처리(단축키는 "컨트롤 + /"), 번개 표시 누르면 표시됨, 컨트롤 + 엔터 눌러도 나옴
-- 글자 사이에 간격이 있어도 ;까지를 한 줄의 명령어로 인식

@@@ 반드시 기억해주세요.	@@@		워크벤치 프로그램 실행시 마다 초기화되는 명령어 실행해야 하므로 외워야 함
-- show databases;			모든 데이터베이스 조회									1. 가장 먼저 데이터베이스 리스트를 불러옴		(번개 버튼 또는 컨트롤+엔터)
-- use hrdb2019;			사용할 데이터베이스 오픈									2. 그 다음 사용할 데이터베이스를 열기		(번개 버튼 또는 컨트롤+엔터)
-- select database();		데이터베이스 선택, 여기까지 진행해야 테이블을 사용할 수 있음		3. 그 다음 데이터베이스 선택				(번개 버튼 또는 컨트롤+엔터)
-- show tables;				데이터베이스의 모든 테이블 조회								4. 그 다음 테이블 조회					(번개 버튼 또는 컨트롤+엔터)

===================================================================================================================================================
*/
  
/* 반드시 기억해주세요. */	-- 워크벤치 프로그램 실행시 마다 초기화되는 명령어 실행해야하므로 외워야 함
show databases;			-- 모든 데이터베이스 조회										1. 가장 먼저 데이터베이스 리스트를 불러옴		(번개 버튼 또는 컨트롤+엔터)
use hrdb2019;			-- 사용할 데이터베이스 오픈									2. 그 다음 사용할 데이터베이스를 열기		(번개 버튼 또는 컨트롤+엔터)
select database();		-- 데이터베이스 선택, 여기까지 진행해야 테이블을 사용할 수 있음		3. 그 다음 데이터베이스 선택				(번개 버튼 또는 컨트롤+엔터)
show tables;			-- 데이터베이스의 모든 테이블 조회								4. 그 다음 테이블 조회					(번개 버튼 또는 컨트롤+엔터)

use market_db;
select database();
show tables;

use hrdb2019;
select database();
show tables;

/*************************************************************************************************************************************************
	DESC (DESCRIBE) : 테이블 구조 확인
    형식 > desc(describe) [테이블명];
**************************************************************************************************************************************************/
show tables;
desc employee;
desc department;
desc unit;
desc vacation;

/*************************************************************************************************************************************************
	SELECT : 테이블 내용 조회
    형식 > SELECT [컬럼리스트] FROM [테이블명];
**************************************************************************************************************************************************/
SELECT EMP_ID, EMP_NAME FROM EMPLOYEE;
SELECT * FROM EMPLOYEE;
SELECT EMP_NAME, GENDER, HIRE_DATE FROM EMPLOYEE;

-- 사원테이블의 사번, 사원명, 성별, 입사일, 급여를 조회
DESC EMPLOYEE;
SELECT EMP_ID, EMP_NAME, GENDER, HIRE_DATE, SALARY
FROM EMPLOYEE;

-- 부서테이블의 모든 정보를 조회
SHOW TABLES;
SELECT *
FROM DEPARTMENT;

/*************************************************************************************************************************************************
	AS : 컬럼명 별칭 부여
    형식 > SELECT [컬럼명 as 별칭,, ...] FROM [테이블명];
**************************************************************************************************************************************************/
-- 사원테이블의 사번, 사원명, 성별, 입사일, 급여 컬럼을 조회한 한글 컬럼명으로 출력 (공백이 들어가는 경우 따옴표로 감싸주면 됨, AS를 생략하고도 사용이 가능함, 오라클은 주로 이렇게 사용)
SELECT EMP_ID AS 사번, EMP_NAME AS "사 원 명", GENDER AS 성별, HIRE_DATE 입사일, SALARY 급여
FROM EMPLOYEE;

-- 사원테이블의 ID, NAME, GENDER, HDATE, SALARY 컬럼명으로 조회
SELECT EMP_ID AS ID, EMP_NAME AS NAME, GENDER, HIRE_DATE AS HDATE, SALARY
FROM EMPLOYEE;

-- 사원테이블의 사번, 사원명, 부서명, 폰번호, 이메일, 급여, 보너스(급여*10%)를 조회 (기존의 컬럼에 연산을 수행하여 새로운 컬럼을 생성할 수 있다.)
DESC EMPLOYEE;
SELECT EMP_ID, EMP_NAME, DEPT_ID, PHONE, EMAIL, SALARY, SALARY*10 AS BONUS
FROM EMPLOYEE;

-- 현재 날짜를 조회 : CURDATE() / 임시르 사용하는 테스트용 테이블을 생성
-- SELECT CURDATE() FROM DUAL;
SELECT CURDATE() AS DATE FROM DUAL;

/*************************************************************************************************************************************************
	SELECT : 테이블 내용 상세 조회
    형식 > SELECT [컬럼리스트]
			FROM [테이블명]
			WHERE [조건절];
**************************************************************************************************************************************************/
-- 정주고 사원의 정보를 조회
SELECT * FROM EMPLOYEE;
-- SELECT * FROM EMPLOYEE WHERE EMP_NAME = 정주고; -- 에러 발생 사유는 CHAR가 문자열이기 때문에 감싸줘야함
SELECT * FROM EMPLOYEE WHERE EMP_NAME = "정주고";
SELECT * FROM EMPLOYEE WHERE EMP_NAME = '정주고'; -- 싱글 쿼테이션 ''와 더블 쿼테이션 "" 모두 사용 가능

-- SYS 부서에 속한 모든 사원을 조회
SELECT * FROM EMPLOYEE WHERE DEPT_ID = "SYS";
SELECT * FROM EMPLOYEE WHERE DEPT_ID = "sys"; -- 오라클은 대소문자 정확해야 동작, MySQL은 대소문자 모두 가능











